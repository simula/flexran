#!/bin/bash

function install_pistache {
    echo "Installing pistache"
    git clone https://github.com/oktal/pistache.git
    git submodule update --init
    cd pistache
    mkdir build
    cd build
    cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
    make
    sudo make install
    cd - 
}

function install_log4cxx {
    echo "Installing log4cxx"
    wget https://aur.archlinux.org/cgit/aur.git/snapshot/log4cxx.tar.gz
    tar vxzf log4cxx.tar.gz
    cd log4cxx
    makepkg -Acs
    sudo pacman -U --noconfirm log4cxx*.pkg.tar.xz
    cd ..
}

function install_neo4j {
    sudo add-apt-repository ppa:cleishm/neo4j
    sudo apt-get update
    sudo apt-get install neo4j-client libneo4j-client-dev
}


function install_protobuf {

    echo "Installing protobuf from git repository"
    git clone https://github.com/google/protobuf.git
    cd protobuf
    ./autogen.sh
    ./configure 
    echo "Compiling protobuf"
    make -j`nproc`
    sudo make install
    sudo ldconfig
    cd -
}


function pre_install_packages(){
    sudo apt-get update -y
    sudo apt-get install gawk -y
    sudo apt-get install build-essential g++ -y
    sudo apt-get install git -y
    sudo apt-get install cmake -y
}

function post_install_packages(){
    echo "Installing required packages"
    sudo apt-get install libboost-all-dev -y
    sudo apt-get install liblog4cxx-dev liblog4cxx10v5 -y
    sudo apt-get install autoconf automake libtool curl make g++ unzip -y
    install_protobuf
    install_pistache
    install_neo4j
    install_flexran_apidoc
}


function install_flexran_apidoc(){
    sudo apt install nodejs-legacy -y
    sudo apt install npm -y
    sudo npm install apidoc -g
}

function main() {

    pre_install_packages
    #Check if running in Ubuntu or Arch Linux
    os_version=`gawk -F= '/^NAME/{print $2}' /etc/os-release`
    ubuntu_distrib=$(lsb_release -si)$(lsb_release -sr)
    
    
    if [[ $os_version == *"Arch Linux"* ]]; then
	
	echo "Detected Arch Linux"
	echo "Installing required packages"
	sudo pacman -Syu
	sudo pacman --noconfirm -S base-devel cmake protobuf boost boost-libs git
	sudo pacman --noconfirm -S apr-util libxml2 autoconf automake gzip libtool patch sed zip 
	install_pistache
	install_log4cxx
        install_neo4j
    elif [[ $os_version == *"Ubuntu"* ]]; then
	
	if [[ $ubuntu_distrib == *"16"* ]]; then 
	    echo "Detected $ubuntu_distrib"
	else 
	    echo "FlexRAN may not properly work in $ubuntu_distrib"
	    echo "Try Ubuntu 16.04"
	fi 
	post_install_packages

    fi
    
}

main "$@"
